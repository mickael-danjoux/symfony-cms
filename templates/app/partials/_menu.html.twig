{% macro getLink(item, level = 1) %}
    {% set hasChildren = item.__children is not empty %}

    {% set url = '#' %}

    {% if item.type is defined %}
        {% if item.type == constant('App\\Enum\\MenuCategoryTypeEnum::INTERNAL_LINK') and item.page is not null %}
            {% set url = path(item.page.routeName) %}
        {% elseif item.type ==  constant('App\\Enum\\MenuCategoryTypeEnum::CUSTOM_LINK')  %}
            {% set url = item.url %}
        {% endif %}
    {% endif %}

    {% if level == 1 %}
        <a href="{{ url }}" class="nav-link {{ hasChildren ? 'dropdown-toggle' : '' }}" {{ hasChildren ? 'role="button" data-bs-toggle="dropdown" aria-expanded="false"' : '' }} {{ item.newTab ? 'target="_blank"' : '' }}>
            {{ item.title }}
        </a>
    {% else %}
        <a class="dropdown-item" href="{{ url }}" {{ item.newTab ? 'target="_blank"' : '' }}>
            {{ item.title }}
        </a>
    {% endif %}
{% endmacro %}

<ul class="navbar-nav mx-auto px-3 justify-content-lg-center flex-wrap">
{#    <li class="nav-item">#}
{#        <a href="{{ path('app_home') }}" class="nav-link">#}
{#            <i class="fas fa-home"></i> Accueil#}
{#        </a>#}
{#    </li>#}

    {% for item in menu %}
        {% set hasChildren = item.__children is not empty %}
        <li class="nav-item {{ hasChildren ? 'dropdown' : '' }}">
            {{ _self.getLink(item) }}
            {% if hasChildren %}
                <ul class="dropdown-menu">
                    {% for childrenItem in item.__children %}
                        <li>
                            {{ _self.getLink(childrenItem, 2) }}
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}
        </li>
    {% endfor %}
</ul>
